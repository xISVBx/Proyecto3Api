basePath: /
definitions:
  dtos.CategoryResponseDto:
    properties:
      descripcion:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  dtos.CityResponseDto:
    properties:
      cityName:
        type: string
      departmentID:
        type: integer
      id:
        type: integer
    type: object
  dtos.CompanyResponseDto:
    properties:
      company_name:
        type: string
      id:
        type: string
    type: object
  dtos.LoginDto:
    properties:
      email:
        type: string
      password:
        type: string
      token:
        type: string
    required:
    - email
    - password
    type: object
  dtos.ProductResponseDto:
    properties:
      categoryID:
        type: string
      companyID:
        type: string
      discountID:
        type: string
      id:
        type: string
      longDescription:
        type: string
      name:
        type: string
      price:
        type: number
      shortDescription:
        type: string
      stock:
        type: integer
      subCategoryID:
        type: string
      tagID:
        type: string
    type: object
  dtos.RegisterRequestDto:
    properties:
      address:
        type: string
      city_id:
        type: integer
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - last_name
    - name
    - password
    type: object
  dtos.RegisterResponseDto:
    properties:
      email:
        type: string
      lastName:
        type: string
      name:
        type: string
    type: object
  entities.Role:
    properties:
      description:
        type: string
      id:
        type: string
    type: object
  models.AppResponse:
    properties:
      data: {}
      errors:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
host: localhost:3031
info:
  contact:
    email: soporte@jecopainsurance.com
    name: Soporte Col Moda
    url: http://jecopainsurance.com/support
  description: API para la tienda de moda Col Moda.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://jecopainsurance.com/terms/
  title: Col Moda API
  version: "1.0"
paths:
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: Retorna un listado de las categorias de la aplicacion.
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.CategoryResponseDto'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Obtener todas las categorias
      tags:
      - Categories
  /api/v1/cities:
    get:
      consumes:
      - application/json
      description: Retorna un listado de las ciudades filtradas por departamento o
        nombre de ciudad.
      parameters:
      - description: ID del departamento (opcional)
        in: query
        name: department_id
        type: integer
      - description: Nombre de la ciudad (opcional)
        in: query
        name: city_name
        type: string
      - description: ID de la ciudad (opcional)
        in: query
        name: city_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.CityResponseDto'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Obtener todas las ciudades de la aplicación
      tags:
      - Cities
  /api/v1/companies:
    get:
      consumes:
      - application/json
      description: Obtiene una lista de empresas aplicando filtros como ID o nombre
      parameters:
      - description: ID de la empresa (UUID)
        in: query
        name: id
        type: string
      - description: Nombre de la empresa
        in: query
        name: company_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.CompanyResponseDto'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Busca empresas por filtros opcionales
      tags:
      - Empresas
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Permite a los usuarios autenticarse en la plataforma.
      parameters:
      - description: Credenciales de usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      security:
      - BearerAuth: []
      summary: Iniciar sesión
      tags:
      - Auth
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Retorna un listado de los productos aplicando filtros.
      parameters:
      - description: Texto de búsqueda
        in: query
        name: SearchQuery
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.ProductResponseDto'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Obtener todos los productos por filtros
      tags:
      - Products
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Crea una nueva cuenta para el usuario con los datos proporcionados.
      parameters:
      - description: Datos del usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RegisterRequestDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  $ref: '#/definitions/dtos.RegisterResponseDto'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Registro de usuario
      tags:
      - Auth
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Retorna un listado de los roles de la aplicacion.
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Role'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data: {}
              type: object
      summary: Obtener todos los roles
      tags:
      - Roles
  /api/v1/version:
    get:
      description: Retorna la versión de la API configurada en el sistema.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.AppResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Obtener versión
      tags:
      - Version
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
